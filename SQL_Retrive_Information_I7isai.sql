USE GAMO

--- Q1.
--- QUE PERCENTAGEM DAS PARTIDAS ACABARAM EMPATADAS?

SELECT *, 
	SUM(SCORE = 0) / COUNT(SCORE) *100 AS EMPATE_PERCENTAGEM
	FROM MATCHES 
	
--- R: A PERCENTAGEM DE EMPATES FOI DE 12.9%	

--- Q2.
--- QUANTAS PARTIDAS FORAM JOGADAS EM CADA MÊS?

SELECT DATE_FORMAT(DT, '%m') AS MES,
	   COUNT(*) AS TOTAL
	FROM MATCHES
		GROUP BY MES
		ORDER BY MES ASC

--- R: NO MES 01, 02 E 03 FORAM JOGADAS 10, 7 E 9 PARTIDAS RESPECTIVAMENTE

--- Q3.
--- QUANTAS PARTIDAS FORAM JOGADAS POR CADA JOGADOR? 

CREATE TEMPORARY TABLE PLAY_P1 /* ESTA TABELA DIZ O PLAYER ID NA POSIÇÃO 1 E QUANTOS JOGOS FEZ COMO PLAYER 1*/
SELECT PLAYER1_ID, COUNT(DT) AS P1_PLAY
	FROM MATCHES
		GROUP BY PLAYER1_ID
		
CREATE TEMPORARY TABLE PLAY_P2	/* ESTA TABELA FAZ O MESMO MAS PARA O JOGADOR 2*/
SELECT PLAYER2_ID, COUNT(DT) AS P2_PLAY
	FROM MATCHES
		GROUP BY PLAYER2_ID

CREATE TEMPORARY TABLE PLAY /* ESTA TERCEIRA TABELA TEMPORARIA DEVOLVE A UNIÃO DAS DUAS TABELAS ANTERIORES, OU SEJA INDEPENDEMENTE DO JOGADOR TER SIDO PLAYER 1 OU 2*/
SELECT PLAYER1_ID AS PLAYER_ID, P1_PLAY AS TOTAL_PLAY
	FROM PLAY_P1
UNION
SELECT PLAYER2_ID AS PLAYER_ID, P2_PLAY AS TOTAL_PLAY
	FROM PLAY_P2
	
SELECT PLAYER_ID, SUM(TOTAl_PLAY) AS TOTAL_PLAYS /* POR FIM VAMOS BUSCAR A SOMA DOS JOGOS TOTAIS POR CADA JOGADOR E ORDENAMOS POR ID DE FORMA ASCENDENTE*/
	FROM PLAY
		GROUP BY PLAYER_ID
		ORDER BY PLAYER_ID ASC

--- R: POR EXEMPLO, O JOGADOR 1 JOGOU 4 PARTIDAS E O JOGADOR 2 JOGOU 7 PARTIDAS.		
		
--- Q4.
--- OLHANDO SÓ PARA AS PARTIDAS ENTRE HOMENS E MULHERES, QUE GÉNERO GANHA MAIS FREQUENTEMENTE?

CREATE TEMPORARY TABLE P1_SEX /* ESTA TABELA DEVOLVE O SEXO DO JOGADOR 1*/
SELECT MATCHES.ID AS ID1, MATCHES.PLAYER1_ID, MATCHES.SCORE, 
	PLAYERS.GENDER AS P1SEX
	FROM MATCHES
		LEFT JOIN PLAYERS
		ON PLAYER1_ID = PLAYERS.ID
		ORDER BY MATCHES.ID ASC

CREATE TEMPORARY TABLE P2_SEX /* ESTA TABELA DEVOLVE O SEXO DO JOGADOR 2*/
SELECT MATCHES.ID AS ID2, MATCHES.PLAYER2_ID, 
	PLAYERS.GENDER AS P2SEX
	FROM MATCHES
		LEFT JOIN PLAYERS
		ON PLAYER2_ID = PLAYERS.ID
		ORDER BY MATCHES.ID ASC

CREATE TEMPORARY TABLE SCORESEX /*ESTA TABELA É A UNIÃO DAS DUAS TABELAS ANTERIORES*/
SELECT *
	FROM P1_SEX 
		LEFT JOIN P2_SEX 
		ON P1_SEX.ID1 = P2_SEX.ID2

CREATE TEMPORARY TABLE WINNING_GENDER /* ESTA TABELA DEVOLVE O SEXO DO JOGADOR VENCEDOR*/
SELECT *,
	CASE WHEN SCORE=2 THEN P2SEX 
	WHEN SCORE=1 THEN P1SEX
	ELSE NULL 
	END AS WINNING_SEX
		FROM SCORESEX 

SELECT WINNING_SEX , COUNT(ID1) /* FINALMENTE CALCULAMOS QUANTAS VEZES AS MULHERES/HOMENS VENCERAM QUANDO JOGARAM UM CONTRA O OUTRO*/
	FROM WINNING_GENDER
		WHERE P1SEX != P2SEX 
		GROUP BY WINNING_SEX 
		
--- R: QUANDO O JOGO É ENTRE GENEROS OPOSTOS, O GENERO FEMININO APARENTA GANHAR MAIS VEZES, COM 18 VITORIAS, CONTRA 14 DO GENERO MASCULINO. 		

--- Q5.
--- QUE JOGADORES GANHARAM MAIS PARTIDAS?

CREATE TEMPORARY TABLE WINNING_PLAYER
SELECT *,
	CASE WHEN SCORE = 2 THEN PLAYER2_ID
	WHEN SCORE = 1 THEN PLAYER1_ID
	ELSE NULL
	END AS WINNIGS_ID
		FROM MATCHES

SELECT WINNIGS_ID , COUNT(WINNIGS_ID) AS TOTAL_WINNING
	FROM WINNING_PLAYER
		GROUP BY WINNIGS_ID
		ORDER BY TOTAL_WINNING DESC

--- R: O JOGADOR QUE GANHOU MAIS PARTIDAS FOI O JOGADOR 6, COM 7 VITORIAS. SEGUIDO DO JOGADOR 3 E 9 COM 6 E 5 VITORIAS RESPECTIVAMENTE.		
		
--- Q6.
--- QUAL É A IDADE MÉDIA DOS VENCEDORES EM GAMO?
--- QUAL É A IDADE MÉDIA DOS DERROTADOS EM GAMO?

CREATE TEMPORARY TABLE BIRTH_DATE_NOT_EMPTY /* NESTA TABELA TEMPORARIO, APENAS ESTÃO JOGADORES COM DATAS DE NASCIMENTO */
SELECT *
	FROM PLAYERS
		WHERE BIRTH_DATE != '' 

CREATE TEMPORARY TABLE PLAYER_AGE /* AQUI VAMOS CALCULAR A IDADE DOS DIFERENTES JOGADORES*/
SELECT ID AS AGE_ID, 
	CASE WHEN BIRTH_DATE_NOT_EMPTY.BIRTH_DATE IS NULL THEN ''
	ELSE YEAR(CURDATE())-YEAR(BIRTH_DATE_NOT_EMPTY.BIRTH_DATE) - (DAYOFYEAR(CURDATE()) < DAYOFYEAR(BIRTH_DATE_NOT_EMPTY.BIRTH_DATE)) 
	END AS 'AGE'
		FROM BIRTH_DATE_NOT_EMPTY

CREATE TEMPORARY TABLE WINNING_PLAYERS /* TABELA APENAS COM OS JOGADORES VENCEDORES*/
SELECT *,
	CASE WHEN SCORE=2 THEN PLAYER2_ID
	WHEN SCORE=1 THEN PLAYER1_ID
	ELSE NULL 
	END AS WINNING_PLAYER
		FROM MATCHES

CREATE TEMPORARY TABLE WINNING_AGE /* ESTA TABELA DEVOLVE A IDADE DO JOGADORES VENCEDORES */
SELECT *
	FROM WINNING_PLAYERS 
		LEFT JOIN PLAYER_AGE 
		ON PLAYER_AGE.AGE_ID = WINNING_PLAYERS.WINNING_PLAYER 

SELECT *, /* POR FIM, CALCULAMOS A MÉDIA DE IDADES DOS VENCEDORES*/
	AVG(AGE)
		FROM WINNING_AGE

--- FAZEMOS O MESMO PARA OS JOGADORES QUE PERDERAM

CREATE TEMPORARY TABLE LOSING_PLAYERS /* TABELA APENAS COM OS JOGADORES PERDEDORES*/
SELECT *,
	CASE WHEN SCORE=2 THEN PLAYER1_ID
	WHEN SCORE=1 THEN PLAYER2_ID
	ELSE NULL 
	END AS LOSING_PLAYER
		FROM MATCHES

CREATE TEMPORARY TABLE LOSING_AGE /* ESTA TABELA DEVOLVE A IDADE DO JOGADORES PERDEDORES */
SELECT *
	FROM LOSING_PLAYERS 
	LEFT JOIN PLAYER_AGE 
	ON PLAYER_AGE.AGE_ID = LOSING_PLAYERS.LOSING_PLAYER 

SELECT *, /* POR FIM, CALCULAMOS A MÉDIA DE IDADES DOS PERDEDORES*/
	AVG(AGE)
		FROM LOSING_AGE

--- R: A MÉDIA DE IDADES DOS VENCEDORES É DE 31.625 E DOS DERROTADOS DE 31.644.		
		
--- Q BONUS
--- EM MÉDIA DE X EM X HORAS/DIAS ALGUEM COMEÇA UMA PARTIDA. DETERMINE X

CREATE TEMPORARY TABLE HORAS_ATE_PROXIMA_PARTIDA /*ESTA TABELA DIZ-NOS QUANTAS HORAS DEMOROU ATÉ COMEÇAR O JOGO SEGUINTE */
SELECT *,
	TIME_TO_SEC(TIMEDIFF(DT, LAG(DT) OVER (ORDER BY DT))) /3600 AS HORAS_PARTIDA/*HORAS ENTRE O JOGO SEGUINTE*/
		FROM MATCHES
		ORDER BY DT

SELECT *, /* POR FIM, CALCULAMOS A MÉDIAS DE HORAS QUE DEMOROU A COMEÇAR UM NOVO JOGO*/
	AVG(HORAS_PARTIDA)
		FROM HORAS_ATE_PROXIMA_PARTIDA

--- R: EM MÉDIA DEMORA 74.627 HORAS A COMEÇAR UM NOVO JOGO		